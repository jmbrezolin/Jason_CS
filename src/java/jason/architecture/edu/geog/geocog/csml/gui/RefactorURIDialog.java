/**
 * Copyright (c) 2009, Benjamin Adams
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Benjamin Adams nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

 * THIS SOFTWARE IS PROVIDED BY Benjamin Adams ''AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Benjamin Adams BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * @author Ben
 */

/*
 * RefactorDomainURIDialog.java
 *
 * Created on Jul 25, 2009, 10:36:31 PM
 */

package edu.geog.geocog.csml.gui;

import edu.geog.geocog.csml.model.CSMLModel;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Ben
 */
public class RefactorURIDialog extends javax.swing.JDialog {
    
    public static final int CANCEL = 0;
    public static final int OK = 1;
    
    private boolean refactor = true;
    private int result = CANCEL;
    private CSMLModel model;
    private String newURI;
    private String origURI;

    /** Creates new form RefactorDomainURIDialog */
    public RefactorURIDialog(java.awt.Frame parent, boolean modal, String origURI, CSMLModel model, String type) {
        super(parent, modal);
        this.model = model;
        newURI = origURI;
        this.origURI = origURI;
        initComponents();
        uriTextField.setText(origURI);
        origURILabel.setText("Original URI: " + origURI);
        uriLabel.setText(type + " URI:");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uriTextField = new javax.swing.JTextField();
        resetBaseButton = new javax.swing.JButton();
        uriLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        changeThisElementOnlyCheckBox = new javax.swing.JCheckBox();
        duplicateLabel = new javax.swing.JLabel();
        origURILabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Refactor URI");
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        uriTextField.getDocument().addDocumentListener(new URIDocumentListener());

        resetBaseButton.setText("Reset base");
        resetBaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBaseButtonActionPerformed(evt);
            }
        });

        uriLabel.setText("URI:");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        changeThisElementOnlyCheckBox.setText("Update this element only (no refactoring)");
        changeThisElementOnlyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeThisElementOnlyCheckBoxActionPerformed(evt);
            }
        });

        duplicateLabel.setForeground(new java.awt.Color(255, 0, 0));
        duplicateLabel.setText(" ");

        origURILabel.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        origURILabel.setText("Original URI: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(origURILabel))
                    .addComponent(uriTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uriLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duplicateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(changeThisElementOnlyCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addComponent(resetBaseButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duplicateLabel)
                    .addComponent(uriLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uriTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(origURILabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resetBaseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeThisElementOnlyCheckBox)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        result = CANCEL;
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void changeThisElementOnlyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeThisElementOnlyCheckBoxActionPerformed
        refactor = !changeThisElementOnlyCheckBox.isSelected();
    }//GEN-LAST:event_changeThisElementOnlyCheckBoxActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        result = OK;
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void resetBaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBaseButtonActionPerformed
        try {
            URI uri = new URI(newURI);
            String fragment = uri.getFragment();
            newURI = model.getcsmlBase() + "#" + fragment;
            uriTextField.setText(newURI);
        } catch (URISyntaxException ex) {
            newURI = model.getcsmlBase() + "#";
            uriTextField.setText(newURI);
        }
    }//GEN-LAST:event_resetBaseButtonActionPerformed

    public boolean getRefactor() {
        return refactor;
    }

    public int getResult() {
        return result;
    }

    public String getNewURI() {
        return newURI;
    }

    private class URIDocumentListener implements DocumentListener {

        public void insertUpdate(DocumentEvent e) {
            update();
        }

        public void removeUpdate(DocumentEvent e) {
            update();
        }

        public void changedUpdate(DocumentEvent e) { }

        private void update() {
            newURI = uriTextField.getText();
            try {
                URI testURI = new URI(newURI);
            } catch (URISyntaxException ex) {
                okButton.setEnabled(false);
                duplicateLabel.setText("This is an invalid URI");
                return;
            }
            if (!newURI.equals(origURI) && model.containsURI(newURI)) {
                okButton.setEnabled(false);
                duplicateLabel.setText("This URI already exists in conceptual space");
            } else {
                okButton.setEnabled(true);
                duplicateLabel.setText("");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox changeThisElementOnlyCheckBox;
    private javax.swing.JLabel duplicateLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel origURILabel;
    private javax.swing.JButton resetBaseButton;
    private javax.swing.JLabel uriLabel;
    private javax.swing.JTextField uriTextField;
    // End of variables declaration//GEN-END:variables

}
